import "../styles/globals.scss";
import Navbar from "@/components/Layout/Navbar/Navbar";
import { Inter } from "next/font/google";
import { Metadata } from "next";
import { Revalidate } from "next/dist/server/lib/revalidate";
import { AppConfigDynamic } from "next/dist/build/utils";
import { StoreProvider } from "@/lib/store/storeProvider";
import { AppInitializer } from "../components/Initializers/AppInitializer/AppInitializer";
import { cookies } from "next/headers";
import { TInitialRoute, fetchInitialDataBasedOnRoute } from "@/lib/utils/api.utils";
import {
  TCurrencyString,
  INITIAL_CURRENCY,
} from "@/lib/constants/globalConstants";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Crypto Tracker",
  description: "Generated by create next app",
};
// Sets the rendering behavior of the page to be dynamic for every request.
// 'force-dynamic' ensures that the page is always rendered on the server side initially
export const dynamic: AppConfigDynamic = "force-dynamic";
// Prevents caching of the page to ensure up to date crypto information
export const revalidate: Revalidate = 0;

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  if (typeof window !== "undefined") {
    console.log("App.js rendered in Browser,", children);
  }

  // Access cookies in server components
  const cookieStore = cookies();

  // Retrieve currency preference from cookies or use default
  const currencyPreference =
    (cookieStore.get("currencyPreference")?.value as TCurrencyString) ||
    INITIAL_CURRENCY;

  // Retrieve the initial route from the cookie store
  const initialRoute =
    (cookieStore.get("initialRoute")?.value as TInitialRoute) || "/";

  // Fetch initial data based on the route and currency information
  const initialData = await fetchInitialDataBasedOnRoute({
    initialRoute,
    currencyPreference,
  });

  return (
    <html lang="en">
      <StoreProvider initialData={initialData}>
        <AppInitializer />
        <body className={inter.className}>
          <Navbar />
          {children}
        </body>
      </StoreProvider>
    </html>
  );
}
